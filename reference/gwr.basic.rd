<!DOCTYPE html>
<!-- Generated by pkgdown: do not edit by hand --><html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Basic GWR model — gwr.basic • GWmodel</title><!-- jquery --><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script><!-- Bootstrap --><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha256-bZLfwXAP04zRMK2BjiO8iu9pf4FbLqX6zitd+tIvLhE=" crossorigin="anonymous"><script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script><!-- bootstrap-toc --><link rel="stylesheet" href="../bootstrap-toc.css"><script src="../bootstrap-toc.js"></script><!-- Font Awesome icons --><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=" crossorigin="anonymous"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/v4-shims.min.css" integrity="sha256-wZjR52fzng1pJHwx4aV2AO3yyTOXrcDW7jBpJtTwVxw=" crossorigin="anonymous"><!-- clipboard.js --><script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.6/clipboard.min.js" integrity="sha256-inc5kl9MA1hkeYUt+EC3BhlIgyp/2jDIyBLS6k3UxPI=" crossorigin="anonymous"></script><!-- headroom.js --><script src="https://cdnjs.cloudflare.com/ajax/libs/headroom/0.11.0/headroom.min.js" integrity="sha256-AsUX4SJE1+yuDu5+mAVzJbuYNPHj/WroHuZ8Ir/CkE0=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/headroom/0.11.0/jQuery.headroom.min.js" integrity="sha256-ZX/yNShbjqsohH1k95liqY9Gd8uOiE1S4vZc+9KQ1K4=" crossorigin="anonymous"></script><!-- pkgdown --><link href="../pkgdown.css" rel="stylesheet"><script src="../pkgdown.js"></script><meta property="og:title" content="Basic GWR model — gwr.basic"><meta property="og:description" content="This function implements basic GWR"><!-- mathjax --><script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js" integrity="sha256-nvJJv9wWKEm88qvoQl9ekL2J+k/RWIsaSScxxlsrv8k=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/config/TeX-AMS-MML_HTMLorMML.js" integrity="sha256-84DKXVJXs0/F8OTMzX4UR909+jtl4G7SPypPavF+GfA=" crossorigin="anonymous"></script><!--[if lt IE 9]>
<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]--></head><body data-spy="scroll" data-target="#toc">


    <div class="container template-reference-topic">
      <header><div class="navbar navbar-default navbar-fixed-top" role="navigation">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <span class="navbar-brand">
        <a class="navbar-link" href="../index.html">GWmodel</a>
        <span class="version label label-default" data-toggle="tooltip" data-placement="bottom" title="">2.4-1</span>
      </span>
    </div>

    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav"><li>
  <a href="../reference/index.html">Reference</a>
</li>
      </ul><ul class="nav navbar-nav navbar-right"></ul></div><!--/.nav-collapse -->
  </div><!--/.container -->
</div><!--/.navbar -->



      </header><div class="row">
  <div class="col-md-9 contents">
    <div class="page-header">
    <h1>Basic GWR model</h1>

    <div class="hidden name"><code>gwr.basic.rd</code></div>
    </div>

    <div class="ref-description">
    <p>This function implements basic GWR</p>
    </div>

    <div id="ref-usage">
    <div class="sourceCode"><pre class="sourceCode r"><code><span><span class="fu">gwr.basic</span><span class="op">(</span><span class="va">formula</span>, <span class="va">data</span>, <span class="va">regression.points</span>, <span class="va">bw</span>, kernel<span class="op">=</span><span class="st">"bisquare"</span>,</span>
<span>adaptive<span class="op">=</span><span class="cn">FALSE</span>, p<span class="op">=</span><span class="fl">2</span>, theta<span class="op">=</span><span class="fl">0</span>, longlat<span class="op">=</span><span class="cn">F</span>,<span class="va">dMat</span>,F123.test<span class="op">=</span><span class="cn">F</span>,cv<span class="op">=</span><span class="cn">F</span>, W.vect<span class="op">=</span><span class="cn">NULL</span>,</span>
<span>parallel.method<span class="op">=</span><span class="cn">FALSE</span>,parallel.arg<span class="op">=</span><span class="cn">NULL</span><span class="op">)</span></span>
<span><span class="co"># S3 method for class 'gwrm'</span></span>
<span><span class="fu"><a href="https://rdrr.io/r/base/print.html" class="external-link">print</a></span><span class="op">(</span><span class="va">x</span>, <span class="va">...</span><span class="op">)</span></span></code></pre></div>
    </div>

    <div id="arguments">
    <h2>Arguments</h2>
    <p></p>
<dl><dt id="arg-formula">formula<a class="anchor" aria-label="anchor" href="#arg-formula"></a></dt>
<dd><p>Regression model formula of a <a href="https://rdrr.io/r/stats/formula.html" class="external-link">formula</a> object</p></dd>

  <dt id="arg-data">data<a class="anchor" aria-label="anchor" href="#arg-data"></a></dt>
<dd><p>a Spatial*DataFrame, i.e. SpatialPointsDataFrame or SpatialPolygonsDataFrame as defined in package <span class="pkg">sp</span>, or a sf object defined in package <span class="pkg">sf</span></p></dd>

  <dt id="arg-regression-points">regression.points<a class="anchor" aria-label="anchor" href="#arg-regression-points"></a></dt>
<dd><p>a Spatial*DataFrame object, i.e. SpatialPointsDataFrame or SpatialPolygonsDataFrame as defined in package <span class="pkg">sp</span>; Note that no diagnostic information will returned if it is assigned</p></dd>

  <dt id="arg-bw">bw<a class="anchor" aria-label="anchor" href="#arg-bw"></a></dt>
<dd><p>bandwidth used in the weighting function, possibly calculated by <a href="bw.gwr.html">bw.gwr</a>;fixed (distance) or adaptive bandwidth(number of nearest neighbours)</p></dd>

  <dt id="arg-kernel">kernel<a class="anchor" aria-label="anchor" href="#arg-kernel"></a></dt>
<dd><p>function chosen as follows:</p>
<p>gaussian: wgt = exp(-.5*(vdist/bw)^2);</p>
<p>exponential: wgt = exp(-vdist/bw);</p>
<p>bisquare: wgt = (1-(vdist/bw)^2)^2 if vdist &lt; bw, wgt=0 otherwise;</p>
<p>tricube: wgt = (1-(vdist/bw)^3)^3 if vdist &lt; bw, wgt=0 otherwise;</p>
<p>boxcar: wgt=1 if dist &lt; bw, wgt=0 otherwise</p></dd>

  <dt id="arg-adaptive">adaptive<a class="anchor" aria-label="anchor" href="#arg-adaptive"></a></dt>
<dd><p>if TRUE calculate an adaptive kernel where the bandwidth (bw) corresponds to the number of nearest neighbours (i.e. adaptive distance); default is FALSE, where a fixed kernel is found (bandwidth is a fixed distance)</p></dd>

  <dt id="arg-p">p<a class="anchor" aria-label="anchor" href="#arg-p"></a></dt>
<dd><p>the power of the Minkowski distance, default is 2, i.e. the Euclidean distance</p></dd>

  <dt id="arg-theta">theta<a class="anchor" aria-label="anchor" href="#arg-theta"></a></dt>
<dd><p>an angle in radians to rotate the coordinate system, default is 0</p></dd>

  <dt id="arg-longlat">longlat<a class="anchor" aria-label="anchor" href="#arg-longlat"></a></dt>
<dd><p>if TRUE, great circle distances will be calculated</p></dd>

  <dt id="arg-dmat">dMat<a class="anchor" aria-label="anchor" href="#arg-dmat"></a></dt>
<dd><p>a pre-specified distance matrix, it can be calculated by the function <code><a href="gw.dist.html">gw.dist</a></code></p></dd>

  <dt id="arg-f-test">F123.test<a class="anchor" aria-label="anchor" href="#arg-f-test"></a></dt>
<dd><p>If TRUE, conduct three seperate F-tests according to Leung et al. (2000).</p></dd>

  <dt id="arg-cv">cv<a class="anchor" aria-label="anchor" href="#arg-cv"></a></dt>
<dd><p>if TRUE, cross-validation data will be calculated and returned in the output Spatial*DataFrame</p></dd>

  <dt id="arg-w-vect">W.vect<a class="anchor" aria-label="anchor" href="#arg-w-vect"></a></dt>
<dd><p>default NULL, if given it will be used to weight the distance weighting matrix</p></dd>

  <dt id="arg-x">x<a class="anchor" aria-label="anchor" href="#arg-x"></a></dt>
<dd><p>an object of class “gwrm”, returned by the function <code>gwr.basic</code></p></dd>

  <dt id="arg-parallel-method">parallel.method<a class="anchor" aria-label="anchor" href="#arg-parallel-method"></a></dt>
<dd><p>FALSE as default, and the calibration will be conducted traditionally via the serial technique,
                         "omp": multi-thread technique with the OpenMP API,
                         "cluster": multi-process technique with the <span class="pkg">parallel</span> package,
                         "cuda": parallel computing technique with CUDA</p></dd>

  <dt id="arg-parallel-arg">parallel.arg<a class="anchor" aria-label="anchor" href="#arg-parallel-arg"></a></dt>
<dd><p>if parallel.method is not FALSE, then set the argument by following:
                      if parallel.method is "omp", parallel.arg refers to the number of threads used, and its default value is
                       the number of cores - 1;
                      if parallel.method is "cluster", parallel.arg refers to the number of R sessions used, and its default value is
                       the number of cores - 1;
                      if parallel.method is "cuda",  parallel.arg refers to the number of calibrations  included in each group,
                      but note a too large value may cause the overflow of GPU memory.</p></dd>

  <dt id="arg--">...<a class="anchor" aria-label="anchor" href="#arg--"></a></dt>
<dd><p>arguments passed through (unused)</p></dd>

</dl></div>
    <div id="value">
    <h2>Value</h2>
    <p>A list of class “gwrm”:</p>
<dl><dt>GW.arguments</dt>
<dd><p>a list class object including the model fitting parameters for generating the report file</p></dd>

  <dt>GW.diagnostic</dt>
<dd><p>a list class object including the diagnostic information of the model fitting</p></dd>

  <dt>lm</dt>
<dd><p>an object of class inheriting from “lm”, see <a href="https://rdrr.io/r/stats/lm.html" class="external-link">lm</a>.</p></dd>

  <dt>SDF</dt>
<dd><p>a SpatialPointsDataFrame (may be gridded), or
             SpatialPolygonsDataFrame object (see package “sp”), or sf object  (see package “sf”) integrated with
             regression.points, GWR coefficient estimates, y value,predicted values, coefficient standard errors and t-values in its "data" slot.</p></dd>

  <dt>timings</dt>
<dd><p>starting and ending time.</p></dd>

  <dt>this.call</dt>
<dd><p>the function call used.</p></dd>

  <dt>Ftest.res</dt>
<dd><p>results of Leung's F tests when F123.test is TRUE.</p></dd>

</dl></div>
    <div id="references">
    <h2>References</h2>
    <p>Brunsdon, C, Fotheringham, S, Charlton, M (1996), Geographically Weighted Regression: A Method for Exploring Spatial Nonstationarity.
Geographical Analysis 28(4):281-298</p>
<p>Charlton, M, Fotheringham, S, and Brunsdon, C (2007), GWR3.0, <a href="http://gwr.nuim.ie/" class="external-link">http://gwr.nuim.ie/</a>.</p>
<p>Fotheringham S, Brunsdon, C, and Charlton, M (2002),
Geographically Weighted Regression: The Analysis of Spatially Varying Relationships, Chichester: Wiley.</p>
<p>Leung, Y, Mei, CL, and Zhang, WX (2000), Statistical tests for spatial nonstationarity
based on the geographically weighted regression model. Environment and Planning A, 32, 9-32.</p>
<p>Lu, B, Charlton, M, Harris, P, Fotheringham, AS (2014) Geographically weighted regression
with a non-Euclidean distance metric: a case study using hedonic house price data.
International Journal of Geographical Information Science 28(4): 660-681</p>
<p>OpenMP: <a href="https://www.openmp.org/" class="external-link">https://www.openmp.org/</a></p>
<p>CUDA: <a href="https://developer.nvidia.com/cuda-zone" class="external-link">https://developer.nvidia.com/cuda-zone</a></p>
<p>R Core Team (2020). R: A language and environment for statistical computing. R Foundation for Statistical
Computing, Vienna, Austria.  <a href="https://www.R-project.org/" class="external-link">https://www.R-project.org/</a>.</p>
    </div>
    <div id="note">
    <h2>Note</h2>
    <p>Requirements of using CUDA for high-performence computation in GWR functions:</p>
<p>To run GWR-CUDA (i.e. parallel.method is pecified as “cuda”) with
<code>gwr.basic</code> , <code>bw.gwr</code> and <code>gwr.model.selection</code>,
the following conditions are required:</p>
<p>1. There is at least one NVIDIA GPU supporting CUDA equipped on user's computer.</p>
<p>2. CUDA (&gt;10.2) are installed with the environment variable `CUDA_HOME` set properly.</p>
<p>3. The package should re-built from source.
   - For Linux user, `GWmodelCUDA` will be automatically built if CUDA toolkit could be detected
     by the complier.
   - For Windows user, `GWmodelCUDA.dll` and `GWmodelCUDA.lib` will be automatically downloaded;
     however, we would recommend users to build the `GWmodelCUDA` library manually to avoid some potentially
     unknown issues, and an `CMakeLists.txt` file is provided for this procedure.</p>
<p>If any condition above is not satisfied, the GWR-CUDA will not work even though the “parallel.method” is
specified as “cuda”.</p>
    </div>
    <div id="author">
    <h2>Author</h2>
    <p>Binbin Lu <a href="mailto:binbinlu@whu.edu.cn">binbinlu@whu.edu.cn</a></p>
    </div>

    <div id="ref-examples">
    <h2>Examples</h2>
    <div class="sourceCode"><pre class="sourceCode r"><code><span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/utils/data.html" class="external-link">data</a></span><span class="op">(</span><span class="va">LondonHP</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">DM</span><span class="op">&lt;-</span><span class="fu"><a href="gw.dist.html">gw.dist</a></span><span class="op">(</span>dp.locat<span class="op">=</span><span class="fu">coordinates</span><span class="op">(</span><span class="va">londonhp</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="co">##Compare the time consumed with and without a specified distance matrix</span></span></span>
<span class="r-in"><span><span class="kw">if</span> <span class="op">(</span><span class="cn">FALSE</span><span class="op">)</span> <span class="op">{</span> <span class="co"># \dontrun{</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span><span class="va">gwr.res</span><span class="op">&lt;-</span><span class="fu">gwr.basic</span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>, data<span class="op">=</span><span class="va">londonhp</span>, bw<span class="op">=</span><span class="fl">1000</span>,</span></span>
<span class="r-in"><span>            kernel <span class="op">=</span> <span class="st">"gaussian"</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span><span class="va">DM</span><span class="op">&lt;-</span><span class="fu"><a href="gw.dist.html">gw.dist</a></span><span class="op">(</span>dp.locat<span class="op">=</span><span class="fu">coordinates</span><span class="op">(</span><span class="va">londonhp</span><span class="op">)</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span><span class="va">gwr.res</span><span class="op">&lt;-</span><span class="fu">gwr.basic</span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>, data<span class="op">=</span><span class="va">londonhp</span>, bw<span class="op">=</span><span class="fl">1000</span>,</span></span>
<span class="r-in"><span>            kernel <span class="op">=</span> <span class="st">"gaussian"</span>, dMat<span class="op">=</span><span class="va">DM</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span></span></span>
<span class="r-in"><span><span class="co">## specify an optimum bandwidth by cross-validation appraoch</span></span></span>
<span class="r-in"><span><span class="va">bw1</span><span class="op">&lt;-</span><span class="fu"><a href="bw.gwr.html">bw.gwr</a></span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>, data<span class="op">=</span><span class="va">londonhp</span>, kernel <span class="op">=</span> <span class="st">"gaussian"</span>,dMat<span class="op">=</span><span class="va">DM</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">gwr.res1</span><span class="op">&lt;-</span><span class="fu">gwr.basic</span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>, data<span class="op">=</span><span class="va">londonhp</span>, bw<span class="op">=</span><span class="va">bw1</span>,kernel <span class="op">=</span> <span class="st">"gaussian"</span>, </span></span>
<span class="r-in"><span>                   dMat<span class="op">=</span><span class="va">DM</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">gwr.res1</span> <span class="op">}</span> <span class="co"># }</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/utils/data.html" class="external-link">data</a></span><span class="op">(</span><span class="va">LondonBorough</span><span class="op">)</span></span></span>
<span class="r-in"><span></span></span>
<span class="r-in"><span><span class="va">nsa</span> <span class="op">=</span> <span class="fu"><a href="https://rdrr.io/r/base/list.html" class="external-link">list</a></span><span class="op">(</span><span class="st">"SpatialPolygonsRescale"</span>, <span class="fu">layout.north.arrow</span><span class="op">(</span><span class="op">)</span>, offset <span class="op">=</span> <span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="fl">561900</span>,<span class="fl">200900</span><span class="op">)</span>, </span></span>
<span class="r-in"><span>scale <span class="op">=</span> <span class="fl">500</span>, col<span class="op">=</span><span class="fl">1</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="kw">if</span> <span class="op">(</span><span class="cn">FALSE</span><span class="op">)</span> <span class="op">{</span> <span class="co"># \dontrun{</span></span></span>
<span class="r-in"><span><span class="kw">if</span><span class="op">(</span><span class="kw"><a href="https://rdrr.io/r/base/library.html" class="external-link">require</a></span><span class="op">(</span><span class="st">"RColorBrewer"</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="op">{</span></span></span>
<span class="r-in"><span>  <span class="va">mypalette</span><span class="op">&lt;-</span><span class="fu"><a href="https://rdrr.io/pkg/RColorBrewer/man/ColorBrewer.html" class="external-link">brewer.pal</a></span><span class="op">(</span><span class="fl">6</span>,<span class="st">"Spectral"</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="fu"><a href="https://rdrr.io/r/grDevices/x11.html" class="external-link">x11</a></span><span class="op">(</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="fu">spplot</span><span class="op">(</span><span class="va">gwr.res1</span><span class="op">$</span><span class="va">SDF</span>, <span class="st">"FLOORSZ"</span>, key.space <span class="op">=</span> <span class="st">"right"</span>, cex<span class="op">=</span><span class="fl">1.5</span>, cuts<span class="op">=</span><span class="fl">10</span>,</span></span>
<span class="r-in"><span>  ylim<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="fl">155840.8</span>,<span class="fl">200933.9</span><span class="op">)</span>, xlim<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="fl">503568.2</span>,<span class="fl">561957.5</span><span class="op">)</span>,</span></span>
<span class="r-in"><span>  main<span class="op">=</span><span class="st">"GWR estimated coefficients for FLOORSZ with a fixed bandwidth"</span>, </span></span>
<span class="r-in"><span>  col.regions<span class="op">=</span><span class="va">mypalette</span>, sp.layout<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/list.html" class="external-link">list</a></span><span class="op">(</span><span class="va">nsa</span>, <span class="va">londonborough</span><span class="op">)</span><span class="op">)</span><span class="op">}</span></span></span>
<span class="r-in"><span><span class="op">}</span> <span class="co"># }</span></span></span>
<span class="r-in"><span><span class="kw">if</span> <span class="op">(</span><span class="cn">FALSE</span><span class="op">)</span> <span class="op">{</span> <span class="co"># \dontrun{</span></span></span>
<span class="r-in"><span><span class="va">bw2</span><span class="op">&lt;-</span><span class="fu"><a href="bw.gwr.html">bw.gwr</a></span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>,approach<span class="op">=</span><span class="st">"aic"</span>,adaptive<span class="op">=</span><span class="cn">TRUE</span>, data<span class="op">=</span><span class="va">londonhp</span>, </span></span>
<span class="r-in"><span>            kernel <span class="op">=</span> <span class="st">"gaussian"</span>, dMat<span class="op">=</span><span class="va">DM</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">gwr.res2</span><span class="op">&lt;-</span><span class="fu">gwr.basic</span><span class="op">(</span><span class="va">PURCHASE</span><span class="op">~</span><span class="va">FLOORSZ</span>, data<span class="op">=</span><span class="va">londonhp</span>, bw<span class="op">=</span><span class="va">bw2</span>,adaptive<span class="op">=</span><span class="cn">TRUE</span>,</span></span>
<span class="r-in"><span>                    kernel <span class="op">=</span> <span class="st">"gaussian"</span>, dMat<span class="op">=</span><span class="va">DM</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">gwr.res2</span></span></span>
<span class="r-in"><span><span class="kw">if</span><span class="op">(</span><span class="kw"><a href="https://rdrr.io/r/base/library.html" class="external-link">require</a></span><span class="op">(</span><span class="st">"RColorBrewer"</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="op">{</span></span></span>
<span class="r-in"><span>  <span class="fu"><a href="https://rdrr.io/r/grDevices/x11.html" class="external-link">x11</a></span><span class="op">(</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="fu">spplot</span><span class="op">(</span><span class="va">gwr.res2</span><span class="op">$</span><span class="va">SDF</span>, <span class="st">"FLOORSZ"</span>, key.space <span class="op">=</span> <span class="st">"right"</span>, cex<span class="op">=</span><span class="fl">1.5</span>, cuts<span class="op">=</span><span class="fl">10</span>,</span></span>
<span class="r-in"><span>  ylim<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="fl">155840.8</span>,<span class="fl">200933.9</span><span class="op">)</span>, xlim<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="fl">503568.2</span>,<span class="fl">561957.5</span><span class="op">)</span>,</span></span>
<span class="r-in"><span>  main<span class="op">=</span><span class="st">"GWR estimated coefficients for FLOORSZ with an adaptive bandwidth"</span>, </span></span>
<span class="r-in"><span>  col.regions<span class="op">=</span><span class="va">mypalette</span>, sp.layout<span class="op">=</span><span class="fu"><a href="https://rdrr.io/r/base/list.html" class="external-link">list</a></span><span class="op">(</span><span class="va">nsa</span>,<span class="va">londonborough</span><span class="op">)</span><span class="op">)</span><span class="op">}</span></span></span>
<span class="r-in"><span><span class="op">}</span> <span class="co"># }</span></span></span>
<span class="r-in"><span><span class="kw">if</span> <span class="op">(</span><span class="cn">FALSE</span><span class="op">)</span> <span class="op">{</span> <span class="co"># \dontrun{</span></span></span>
<span class="r-in"><span>  <span class="co">############HP-GWR test code</span></span></span>
<span class="r-in"><span>  <span class="va">simulate.data.generator</span> <span class="op">&lt;-</span> <span class="kw">function</span><span class="op">(</span><span class="va">data.length</span><span class="op">)</span> <span class="op">{</span></span></span>
<span class="r-in"><span>  <span class="va">x1</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">x2</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">x3</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">lon</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span>, mean <span class="op">=</span> <span class="fl">533200</span>, sd <span class="op">=</span> <span class="fl">10000</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">lat</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span>, mean <span class="op">=</span> <span class="fl">159400</span>, sd <span class="op">=</span> <span class="fl">10000</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">y</span> <span class="op">&lt;-</span> <span class="va">x1</span> <span class="op">+</span> <span class="fl">5</span> <span class="op">*</span> <span class="va">x2</span> <span class="op">+</span> <span class="fl">2.5</span> <span class="op">*</span> <span class="va">x3</span> <span class="op">+</span> <span class="fu"><a href="https://rdrr.io/r/stats/Normal.html" class="external-link">rnorm</a></span><span class="op">(</span><span class="va">data.length</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="va">simulate.data</span> <span class="op">&lt;-</span> <span class="fu"><a href="https://rdrr.io/r/base/data.frame.html" class="external-link">data.frame</a></span><span class="op">(</span>y <span class="op">=</span> <span class="va">y</span>, x1 <span class="op">=</span> <span class="va">x1</span>, x2 <span class="op">=</span> <span class="va">x2</span>, x3 <span class="op">=</span> <span class="va">x3</span>, lon <span class="op">=</span> <span class="va">lon</span>, lat <span class="op">=</span> <span class="va">lat</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="fu">coordinates</span><span class="op">(</span><span class="va">simulate.data</span><span class="op">)</span> <span class="op">&lt;-</span> <span class="op">~</span> <span class="va">lon</span> <span class="op">+</span> <span class="va">lat</span></span></span>
<span class="r-in"><span>  <span class="fu"><a href="https://rdrr.io/r/base/names.html" class="external-link">names</a></span><span class="op">(</span><span class="va">simulate.data</span><span class="op">)</span></span></span>
<span class="r-in"><span>  <span class="kw"><a href="https://rdrr.io/r/base/function.html" class="external-link">return</a></span><span class="op">(</span><span class="va">simulate.data</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="op">}</span></span></span>
<span class="r-in"><span><span class="va">simulate.data</span> <span class="op">&lt;-</span> <span class="fu">simulate.data.generator</span><span class="op">(</span><span class="fl">10000</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">adaptive</span> <span class="op">=</span> <span class="cn">TRUE</span></span></span>
<span class="r-in"><span></span></span>
<span class="r-in"><span><span class="co">## GWR (not parallelized)</span></span></span>
<span class="r-in"><span><span class="va">bw.CV.s</span> <span class="op">&lt;-</span> <span class="fu"><a href="bw.gwr.html">bw.gwr</a></span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, approach<span class="op">=</span><span class="st">"CV"</span>, </span></span>
<span class="r-in"><span>                  kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="va">adaptive</span>, parallel.method <span class="op">=</span> <span class="cn">FALSE</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">model.s</span> <span class="op">&lt;-</span> <span class="fu"><a href="gwr.model.selection.html">gwr.model.selection</a></span><span class="op">(</span>DeVar <span class="op">=</span> <span class="st">"y"</span>, InDeVars <span class="op">=</span> <span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="st">"x1"</span>, <span class="st">"x2"</span>, <span class="st">"x3"</span><span class="op">)</span>, data <span class="op">=</span> <span class="va">simulate.data</span>, </span></span>
<span class="r-in"><span>                              bw <span class="op">=</span> <span class="va">bw.CV.s</span>, approach<span class="op">=</span><span class="st">"AIC"</span>, kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">T</span>, </span></span>
<span class="r-in"><span>                              parallel.method <span class="op">=</span> <span class="cn">FALSE</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span></span></span>
<span class="r-in"><span>  <span class="va">betas.s</span> <span class="op">&lt;-</span> <span class="fu">gwr.basic</span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, bw <span class="op">=</span> <span class="va">bw.CV.s</span>, </span></span>
<span class="r-in"><span>                       kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">TRUE</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="op">)</span></span></span>
<span class="r-in"><span></span></span>
<span class="r-in"><span><span class="co">## GWR-Omp</span></span></span>
<span class="r-in"><span><span class="va">bw.CV.omp</span> <span class="op">&lt;-</span> <span class="fu"><a href="bw.gwr.html">bw.gwr</a></span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, approach<span class="op">=</span><span class="st">"CV"</span>, </span></span>
<span class="r-in"><span>                    kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="va">adaptive</span>, parallel.method <span class="op">=</span> <span class="st">"omp"</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">model.omp</span> <span class="op">&lt;-</span> <span class="fu"><a href="gwr.model.selection.html">gwr.model.selection</a></span><span class="op">(</span>DeVar <span class="op">=</span> <span class="st">"y"</span>, InDeVars <span class="op">=</span> <span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="st">"x1"</span>, <span class="st">"x2"</span>, <span class="st">"x3"</span><span class="op">)</span>, data <span class="op">=</span> <span class="va">simulate.data</span>, </span></span>
<span class="r-in"><span>                                bw <span class="op">=</span> <span class="va">bw.CV.omp</span>, approach<span class="op">=</span><span class="st">"AIC"</span>, kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">T</span>, </span></span>
<span class="r-in"><span>                                parallel.method <span class="op">=</span> <span class="st">"omp"</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span></span></span>
<span class="r-in"><span>  <span class="va">betas.omp</span> <span class="op">&lt;-</span> <span class="fu">gwr.basic</span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, bw <span class="op">=</span> <span class="va">bw.CV.omp</span>, </span></span>
<span class="r-in"><span>                        kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">T</span>, parallel.method <span class="op">=</span> <span class="st">"omp"</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span></span></span>
<span class="r-in"><span><span class="co">## GWR-CUDA</span></span></span>
<span class="r-in"><span><span class="va">bw.CV.cuda</span> <span class="op">&lt;-</span> <span class="fu"><a href="bw.gwr.html">bw.gwr</a></span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, approach<span class="op">=</span><span class="st">"CV"</span>, </span></span>
<span class="r-in"><span>                     kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="va">adaptive</span>, parallel.method <span class="op">=</span> <span class="st">"cuda"</span>, </span></span>
<span class="r-in"><span>                     parallel.arg <span class="op">=</span> <span class="fl">6</span><span class="op">*</span><span class="fl">16</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="va">model.cuda</span> <span class="op">&lt;-</span> <span class="fu"><a href="gwr.model.selection.html">gwr.model.selection</a></span><span class="op">(</span>DeVar <span class="op">=</span> <span class="st">"y"</span>, InDeVars <span class="op">=</span> <span class="fu"><a href="https://rdrr.io/r/base/c.html" class="external-link">c</a></span><span class="op">(</span><span class="st">"x1"</span>, <span class="st">"x2"</span>, <span class="st">"x3"</span><span class="op">)</span>, </span></span>
<span class="r-in"><span>                                 data <span class="op">=</span> <span class="va">simulate.data</span>, bw <span class="op">=</span> <span class="va">bw.CV.cuda</span>, approach<span class="op">=</span><span class="st">"AIC"</span>, </span></span>
<span class="r-in"><span>                                 kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">T</span>, </span></span>
<span class="r-in"><span>                                 parallel.method <span class="op">=</span> <span class="st">"cuda"</span>, parallel.arg <span class="op">=</span> <span class="fl">6</span><span class="op">*</span><span class="fl">16</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="fu"><a href="https://rdrr.io/r/base/system.time.html" class="external-link">system.time</a></span><span class="op">(</span></span></span>
<span class="r-in"><span>  <span class="va">betas.cuda</span> <span class="op">&lt;-</span> <span class="fu">gwr.basic</span><span class="op">(</span>data <span class="op">=</span> <span class="va">simulate.data</span>, formula <span class="op">=</span> <span class="va">y</span> <span class="op">~</span> <span class="va">x1</span> <span class="op">+</span> <span class="va">x2</span> <span class="op">+</span> <span class="va">x3</span>, bw <span class="op">=</span> <span class="va">bw.CV.cuda</span>, </span></span>
<span class="r-in"><span>                          kernel <span class="op">=</span> <span class="st">"gaussian"</span>, adaptive <span class="op">=</span> <span class="cn">T</span>, parallel.method <span class="op">=</span> <span class="st">"cuda"</span>, </span></span>
<span class="r-in"><span>                          parallel.arg <span class="op">=</span> <span class="fl">6</span><span class="op">*</span><span class="fl">8</span><span class="op">)</span><span class="op">)</span></span></span>
<span class="r-in"><span><span class="op">}</span> <span class="co"># }</span></span></span>
</code></pre></div>
    </div>
  </div>
  <div class="col-md-3 hidden-xs hidden-sm" id="pkgdown-sidebar">
    <nav id="toc" data-toggle="toc" class="sticky-top"><h2 data-toc-skip>Contents</h2>
    </nav></div>
</div>


      <footer><div class="copyright">
  <p></p><p>Developed by Binbin Lu, Paul Harris, Martin Charlton, Chris Brunsdon, Tomoki Nakaya.</p>
</div>

<div class="pkgdown">
  <p></p><p>Site built with <a href="https://pkgdown.r-lib.org/" class="external-link">pkgdown</a> 2.1.3.</p>
</div>

      </footer></div>






  </body></html>

